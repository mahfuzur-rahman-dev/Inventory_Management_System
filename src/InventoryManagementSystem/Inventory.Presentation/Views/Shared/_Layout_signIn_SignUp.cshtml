<!DOCTYPE html>
<html lang="en">

<head>
	<meta charset="utf-8" />
	<meta name="viewport" content="width=device-width, initial-scale=1.0" />
	<title>@ViewData["Title"] - IMS</title>

	<link rel="preconnect" href="https://fonts.gstatic.com">

	<link rel="shortcut icon" href="~/adminkit/img/logo/" />

	<link href="~/adminkit/css/app.css" rel="stylesheet">
	<link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;600&display=swap" rel="stylesheet">

	@await RenderSectionAsync("Styles", required: false)
</head>

<body>
	<div class="wrapper">

		<div class="main">

			<main class="content">
				<div class="container-fluid p-0">
					@RenderBody()
				</div>
			</main>

			<footer class="footer">
				<partial name="_PartialFiles/_FooterPartial" />
			</footer>
		</div>
	</div>

	<script src="~/adminkit/js/app.js"></script>
	<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
	<script src="https://kit.fontawesome.com/45b272e4b0.js" crossorigin="anonymous"></script>
	<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script>
        document.getElementById('togglePassword').addEventListener('click', function () {
            var passwordField = document.getElementById('password');
            var type = passwordField.getAttribute('type') === 'password' ? 'text' : 'password';
            passwordField.setAttribute('type', type);
            this.firstChild.classList.toggle('fa-eye-slash');
        });
        document.getElementById('toggleConfirmPassword').addEventListener('click', function () {
            var confirmPasswordField = document.getElementById('confirmPassword');
            var type = confirmPasswordField.getAttribute('type') === 'password' ? 'text' : 'password';
            confirmPasswordField.setAttribute('type', type);
            this.firstChild.classList.toggle('fa-eye-slash');
        });
    </script>

    <script type="text/javascript">
        $(document).ready(function () {
            var errorMessage = '@TempData["Error"]';
            var successMessage = '@TempData["Success"]';
            if (errorMessage) {
                Swal.fire({
                    icon: "error",
                    title: "Oops...",
                    text: errorMessage,
                    confirmButtonText: "Try Again"
                });
            }
            if (successMessage) {
                const Toast = Swal.mixin({
                    toast: true,
                    position: "top-end",
                    showConfirmButton: false,
                    timer: 3000,
                    timerProgressBar: true,
                    didOpen: (toast) => {
                        toast.onmouseenter = Swal.stopTimer;
                        toast.onmouseleave = Swal.resumeTimer;
                    }
                });
                Toast.fire({
                    icon: "success",
                    title: successMessage
                });
            }
        });
    </script>
	@await RenderSectionAsync("Scripts", required: false)
</body>

</html>

